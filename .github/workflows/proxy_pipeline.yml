name: Proxy Pipeline

on:
  # Run automatically every 6 hours
  schedule:
    - cron: '0 */6 * * *'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      run_type:
        description: 'Pipeline type to run'
        required: true
        default: 'full'
        type: choice
        options:
        - full
        - scrape_only
        - benchmark_only
  
  # Run on push to main branch
  push:
    branches: [ main ]

jobs:
  proxy-pipeline:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run Proxy Pipeline
      run: |
        if [ "${{ github.event.inputs.run_type }}" = "scrape_only" ]; then
          echo "Running proxy scraping only..."
          python getproxy.py
        elif [ "${{ github.event.inputs.run_type }}" = "benchmark_only" ]; then
          echo "Running proxy benchmarking only..."
          python proxy_benchmark.py
        else
          echo "Running full proxy pipeline..."
          python run_proxy_pipeline.py
        fi
        
    - name: Upload proxy files as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: proxy-results-${{ github.run_id }}
        path: |
          *.txt
          *.csv
          TopProxies.txt
          RotationList.txt
          working-fast.txt
          FailedProxies.txt
          RespondedProxies.txt
          proxy_history.csv
        retention-days: 7
        
    - name: Commit and push results
      if: github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git diff --quiet && git diff --staged --quiet || git commit -m "Update proxy results [skip ci]"
        git push
